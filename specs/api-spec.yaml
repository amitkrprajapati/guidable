openapi: 3.0.0
info:
  title: Guidable API
  description: API Provided by guidable.in.
  version: '20220601'
servers:
  - url: http://localhost/8081
paths:
  /journeys:
    post:
      summary: Create a Jouney
      operationId: createJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        description: Journey details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJourneyDetail'
        required: true
      responses:
        201:
          description: Journey Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    get:
      summary: List all Journeys
      operationId: listJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/LimitQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JourneyResponse'

  /journeys/{journeyId}:
    get:
      summary: Get a jouney
      operationId: getJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/JourneyIdPathParam"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    put:
      summary: Update Journey Detail
      operationId: updateJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/JourneyIdPathParam"
      requestBody:
        description: Journey details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJourneyDetail'
        required: true
      responses:
        202:
          description: Journey Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    delete:
      summary: Delete a Journey
      operationId: deleteJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/JourneyIdPathParam"

      responses:
        200:
          description: Journey Deleted

  /journeys/clone/{linkKey}:
    post:
      summary: Clone a Jouney in your tenancy from apublic Journey
      operationId: cloneJourney
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/LinkKeyPathParam"
      responses:
        201:
          description: Journey Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'

  /roadmaps:
    post:
      summary: Create a Roadmap
      operationId: createRoadmap
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        description: Roadmap details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoadmapDetail'
        required: true
      responses:
        201:
          description: Roadmap Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapResponse'
    get:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/JourneyIdQueryParam"
        - $ref: "#/components/parameters/LimitQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
      summary: Get List of Roadmaps
      operationId: listRoadmap
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoadmapResponse'


  /roadmaps/{roadmapId}:
    get:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/RoadmapIdPathParam"
      summary: Get a Roadmap
      operationId: getRoadmap
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapResponse'
    put:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/RoadmapIdPathParam"
      summary: Update a Roadmap
      operationId: updateRoadmap
      requestBody:
        description: Roadmap details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoadmapDetail'
        required: true
      responses:
        200:
          description: Roadmap updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapResponse'
    delete:
      summary: Delete a Roadmap
      operationId: deleteRoadmap
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/RoadmapIdPathParam"
      responses:
        200:
          description: Roadmap Deleted

  /roadmaps/clone/{linkKey}:
    post:
      summary: Clone a Roadmap from public Roadmap
      operationId: cloneRoadmap
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/LinkKeyPathParam"
      requestBody:
        description: Clone Roadmap details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRoadmapDetail'
        required: true
      responses:
        201:
          description: Roadmap Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapResponse'

  /checkpoints:
    get:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/RoadmapIdQueryParam"
        - $ref: "#/components/parameters/LimitQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
      summary: Get List of Checkpoint in a roadmap
      operationId: listCheckpoint
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckpointResponse'
    post:
      summary: Create a checkpoint
      operationId: createCheckpoint
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        description: Checkpoint details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckpointDetail'
        required: true
      responses:
        201:
          description: Checkpoint Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointResponse'

  /checkpoint/{checkpointId}:
    get:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/CheckpointIdPathParam"
      summary: Get a checkpoint
      operationId: getCheckpoint
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointResponse'
    put:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/CheckpointIdPathParam"
      summary: Update a Checkpoint
      operationId: updateCheckpoint
      requestBody:
        description: Roadmap details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCheckpointDetail'
        required: true
      responses:
        200:
          description: Roadmap updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointResponse'

    delete:
      summary: Delete a Checkpoint
      operationId: deleteCheckpoint
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/CheckpointIdPathParam"
      responses:
        200:
          description: Checkpoint Deleted

  /sharableResource/{resourceId}/actions/enableShareLink:
    put:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/ResourceIdPathParam"

        - $ref: "#/components/parameters/PublicResourceTypeQueryParam"
      summary: Create a sharable public link
      operationId: enableShareLink
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharableResourceResponse'

  /sharableResource/{resourceId}/actions/disableShareLink:
    put:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/ResourceIdPathParam"
      summary: Mark resource as private
      operationId: disableShareLink
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharableResourceResponse'

  /sharableResource/{resourceId}/actions/like:
    post:
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/ResourceIdPathParam"
        - $ref: "#/components/parameters/PublicResourceTypeQueryParam"
      summary: Like public resource
      operationId: likeResource
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharableResourceResponse'
    delete:
      parameters:
        - $ref: "#/components/parameters/ResourceIdPathParam"
        - $ref: "#/components/parameters/PublicResourceTypeQueryParam"
      summary: Unlike public resource
      operationId: unlikeResource
      responses:
        202:
          description: successful operation

  /public/findByLinkKey/{linkKey}:
    get:
      parameters:
        - $ref: "#/components/parameters/LinkKeyPathParam"
      summary: Find a shared resource by linkKey
      operationId: findByLinkKey
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharableResourceResponse'

  /public/getRoadmaps:
    get:
      parameters:
        - $ref: "#/components/parameters/LimitQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
        - $ref: "#/components/parameters/SharableResoureceSortByQueryParam"
      summary: Get top roadmaps
      operationId: getTopRoadmaps
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoadmapResponse'

  /public/getJourneys:
    get:
      parameters:
        - $ref: "#/components/parameters/LimitQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
        - $ref: "#/components/parameters/SharableResoureceSortByQueryParam"
      summary: Get top journeys
      operationId: getTopJourneys
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JourneyResponse'

  /public/{resourceId}/actions/view:
    post:
      parameters:
        - $ref: "#/components/parameters/ResourceIdPathParam"
        - $ref: "#/components/parameters/PublicResourceTypeQueryParam"
      summary: View public resource
      operationId: viewResource
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharableResourceResponse'


components:
  schemas:
    CreateJourneyDetail:
      type: object
      properties:
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this journey to be a ML engineer"

    UpdateJourneyDetail:
      type: object
      properties:
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this journey to be a ML engineer"

    CreateRoadmapDetail:
      type: object
      properties:
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this roadmap to be a ML engineer"
        journeyId:
          type: string
          example: "Journey Id"

    UpdateRoadmapDetail:
      type: object
      properties:
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this roadmap to be a ML engineer"

    CreateCheckpointDetail:
      type: object
      properties:
        name:
          type: string
        shortDescription:
          type: string
        detailedDescription:
          type: string
        quickLink:
          type: string
        isComplete:
          type: boolean

    UpdateCheckpointDetail:
      type: object
      properties:
        name:
          type: string
        shortDescription:
          type: string
        detailedDescription:
          type: string
        quickLink:
          type: string
        isComplete:
          type: boolean

    CloneRoadmapDetail:
      type: object
      properties:
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this roadmap to be a ML engineer"
        journeyId:
          type: string
          example: "Journey Id"

    SharableResourcePublicMetadata:
      type: object
      properties:
        isSharable:
          type: boolean
        publicLinkKey:
          type: string
        views:
          type: integer
          format: int64
          example: 100
        likes:
          type: integer
          format: int64
          example: 42

    RoadmapResponse:
      type: object
      properties:
        id:
          type: string
          example: '12345'
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this roadmap to be a ML engineer"
        journeyId:
          type: string
        originalAuthor:
          type: string
        updatedBy:
          type: string
        publicMetadata:
          $ref: "#/components/schemas/SharableResourcePublicMetadata"

    JourneyResponse:
      type: object
      properties:
        id:
          type: string
          example: '12345'
        name:
          type: string
          example: "Journey to ML Engineer"
        description:
          type: string
          example: "Explore this journey to be a ML engineer"
        originalAuthor:
          type: string
        updatedBy:
          type: string
        publicMetadata:
          $ref: "#/components/schemas/SharableResourcePublicMetadata"

    CheckpointResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        shortDescription:
          type: string
        detailedDescription:
          type: string
        quickLink:
          type: string
        isComplete:
          type: boolean


    SharableResource:
      oneOf:
        - $ref: '#/components/schemas/RoadmapResponse'
        - $ref: '#/components/schemas/JourneyResponse'

    PublicResourceType:
      type: string
      enum:
        - ROADMAP
        - JOURNEY

    SharableResourceResponse:
      type: object
      properties:
        objectType:
          $ref: '#/components/schemas/PublicResourceType'
        publicResource:
          $ref: '#/components/schemas/SharableResource'

  parameters:
    ## Headers as Parameter
    AuthorizationHeader:
      name: Authorization
      in: header
      schema:
        type: string
      required: true


    ## Paths as Parameter

    JourneyIdPathParam:
      name: journeyId
      in: path
      required: true
      schema:
        type: string

    RoadmapIdPathParam:
      name: roadmapId
      in: path
      required: true
      schema:
        type: string

    ResourceIdPathParam:
      name: resourceId
      in: path
      required: true
      schema:
        type: string

    LinkKeyPathParam:
      name: linkKey
      in: path
      required: true
      schema:
        type: string

    CheckpointIdPathParam:
      name: checkpointId
      in: path
      required: true
      schema:
        type: string

    ## Queries as Parameter
    JourneyIdQueryParam:
      name: journeyId
      in: query
      required: true
      schema:
        type: string

    RoadmapIdQueryParam:
      name: roadmapId
      in: query
      required: true
      schema:
        type: string

    PublicResourceTypeQueryParam:
      name: resourceType
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/PublicResourceType'

    LimitQueryParam:
      name: limit
      in: query
      required: true
      schema:
        type: integer

    PageQueryParam:
      name: page
      in: query
      required: true
      schema:
        type: integer

    SharableResoureceSortByQueryParam:
      name: sortby
      in: query
      required: true
      schema:
        type: string
        enum:
          - VIEWS
          - LIKES
          - CLONES
